/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Clases.CL;
import Clases.MRU;
import Clases.MUA;
import Clases.ManejoArchivos;
import Clases.TVR;
import Clases.TiroParabolico;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.*;
import java.util.ArrayList;

/**
 *
 * @author Josu√©
 */
public class Historial extends javax.swing.JFrame {

    ManejoArchivos ma = new ManejoArchivos();
    private ArrayList<MRU> mrua = new ArrayList<MRU>();
    private ArrayList<MUA> muad = new ArrayList<MUA>();
    private ArrayList<CL> cld = new ArrayList<CL>();
    private ArrayList<TVR> tvrd = new ArrayList<TVR>();
    private ArrayList<TiroParabolico> tpt = new ArrayList<TiroParabolico>();

    public Historial() {
        initComponents();
        int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
        int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
        this.setBounds((ancho / 2) - (this.getWidth() / 2), (alto / 2) - (this.getHeight() / 2), 1080, 720);
        File archivo = new File("src/Archivos/FuncionamientoH.txt");
        jTextArea1.setEditable(false);
        try {
            BufferedReader leer = new BufferedReader(new FileReader(archivo));
            String linea = leer.readLine();
            while (linea != null) {
                jTextArea1.append(linea + "\n");
                linea = leer.readLine();
            }
        } catch (Exception ex) {
            Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            PHMRU.setVisible(false);
            PHMUA.setVisible(false);
            PHTV.setVisible(false);
            PHTP.setVisible(false);
            PHCL.setVisible(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        PHMRU = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jcbhMRU = new javax.swing.JComboBox<>();
        PHTiempoMRU = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        PHDistanciaMRU = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        PHVelocidadMRU = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        PHMUA = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        PHAceleracionMUA = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        PHDistanciaMUA = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        PHVoMUA = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        PHVfMUA = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        PHTiempoMUA = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        PHTP = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        PHDRTP = new javax.swing.JPanel();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTable16 = new javax.swing.JTable();
        PHAMTP = new javax.swing.JPanel();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTable17 = new javax.swing.JTable();
        PHTS = new javax.swing.JPanel();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTable18 = new javax.swing.JTable();
        PHTTTP = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable19 = new javax.swing.JTable();
        PHVIEX = new javax.swing.JPanel();
        jScrollPane22 = new javax.swing.JScrollPane();
        jTable20 = new javax.swing.JTable();
        PHVIEY = new javax.swing.JPanel();
        jScrollPane23 = new javax.swing.JScrollPane();
        jTable21 = new javax.swing.JTable();
        PHVFEX = new javax.swing.JPanel();
        jScrollPane24 = new javax.swing.JScrollPane();
        jTable22 = new javax.swing.JTable();
        PHVFTP = new javax.swing.JPanel();
        jScrollPane25 = new javax.swing.JScrollPane();
        jTable23 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        PHCL = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        PHTiempoCL = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        PHVoCL = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        PHVfCL = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        PHAlturaCL = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable12 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        PHTV = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        PHVfTV = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTable13 = new javax.swing.JTable();
        PHTSTV = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTable14 = new javax.swing.JTable();
        PHAMTV = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jcbAMTV = new javax.swing.JTable();
        PHVoTV = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTable15 = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea1.setBackground(new java.awt.Color(0, 204, 204));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 760, 450));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/mru.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/MUA.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TV.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TP.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CL.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/regresar.png"))); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 580, -1, -1));

        PHMRU.setBackground(new java.awt.Color(51, 102, 255));
        PHMRU.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setText("Calculado");
        PHMRU.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 31, -1, -1));

        jcbhMRU.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiempo ", "Distancia ", "Velocidad" }));
        jcbhMRU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbhMRUActionPerformed(evt);
            }
        });
        PHMRU.add(jcbhMRU, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 30, 162, -1));

        PHTiempoMRU.setBackground(new java.awt.Color(0, 204, 204));
        PHTiempoMRU.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad", "Distancia", "Tiempo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setResizable(false);
            jTable3.getColumnModel().getColumn(1).setResizable(false);
            jTable3.getColumnModel().getColumn(2).setResizable(false);
        }

        PHTiempoMRU.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 580, 290));

        PHMRU.add(PHTiempoMRU, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 620, 330));

        PHDistanciaMRU.setBackground(new java.awt.Color(0, 204, 204));
        PHDistanciaMRU.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Tiempo", "Velocidad", "Distancia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        PHDistanciaMRU.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 580, 300));

        PHMRU.add(PHDistanciaMRU, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 620, 330));

        PHVelocidadMRU.setBackground(new java.awt.Color(0, 204, 204));
        PHVelocidadMRU.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Distancia", "Tiempo", "Velocidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        PHVelocidadMRU.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 590, 290));

        PHMRU.add(PHVelocidadMRU, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 620, 330));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Movimiento Rectiline Uniforme");
        PHMRU.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, -1, -1));

        getContentPane().add(PHMRU, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 760, 450));

        PHMUA.setBackground(new java.awt.Color(51, 102, 255));
        PHMUA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setText("Calculado");
        PHMUA.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 43, 100, 20));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aceleracion", "Distancia", "Tiempo", "Velocidad Inicial", "Velocidad Final" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        PHMUA.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 160, -1));

        PHAceleracionMUA.setBackground(new java.awt.Color(0, 204, 204));
        PHAceleracionMUA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Velocidad final", "Velocidad inicial", "Tiempo", "Aceleracion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(jTable8);

        PHAceleracionMUA.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 540, 325));

        PHMUA.add(PHAceleracionMUA, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 610, 350));

        PHDistanciaMUA.setBackground(new java.awt.Color(0, 204, 204));
        PHDistanciaMUA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Velocidad inicial", "Tiempo", "Aceleracion", "Distancia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable4);

        PHDistanciaMUA.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 560, 325));

        PHMUA.add(PHDistanciaMUA, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 610, 350));

        PHVoMUA.setBackground(new java.awt.Color(0, 204, 204));
        PHVoMUA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Velocidad Final", "Aceleracion", "Tiempo", "Velocidad Inicial"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable5);

        PHVoMUA.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 11, 550, 320));

        PHMUA.add(PHVoMUA, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 610, 350));

        PHVfMUA.setBackground(new java.awt.Color(0, 204, 204));
        PHVfMUA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Velocidad inicial", "Aceleracion ", "Tiempo", "Velocidad final"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTable6);

        PHVfMUA.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 21, 560, 310));

        PHMUA.add(PHVfMUA, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 610, 350));

        PHTiempoMUA.setBackground(new java.awt.Color(0, 204, 204));
        PHTiempoMUA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Velocidad final", "Velocidad inicial", "Aceleracion", "Tiempo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(jTable7);

        PHTiempoMUA.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 6, 570, 338));

        PHMUA.add(PHTiempoMUA, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 610, 350));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Movimiento Rectilineo Uniformemete Acelerado");
        PHMUA.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, -1));

        getContentPane().add(PHMUA, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 760, 450));

        PHTP.setBackground(new java.awt.Color(51, 102, 255));
        PHTP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setText("Calculado:");
        PHTP.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Distancia Recorrida", "Altura m√°xima", "Tiempo de subida", "Tiempo total", "Velocidad Inicial Eje X", "Velocidad Inicial Eje Y", "Velocidad Final Eje X", "Velocidad FInal Eje Y" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        PHTP.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 180, -1));

        PHDRTP.setBackground(new java.awt.Color(0, 204, 204));
        PHDRTP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable16.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad", "Angulo", "Distancia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane18.setViewportView(jTable16);

        PHDRTP.add(jScrollPane18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 570, 285));

        PHTP.add(PHDRTP, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 630, 310));

        PHAMTP.setBackground(new java.awt.Color(0, 204, 204));
        PHAMTP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable17.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad", "Angulo", "Altura maxima"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane19.setViewportView(jTable17);

        PHAMTP.add(jScrollPane19, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 6, 572, 285));

        PHTP.add(PHAMTP, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 630, 310));

        PHTS.setBackground(new java.awt.Color(0, 204, 204));
        PHTS.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable18.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad", "Angulo", "Tiempo de subida"
            }
        ));
        jScrollPane20.setViewportView(jTable18);

        PHTS.add(jScrollPane20, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 6, 596, 285));

        PHTP.add(PHTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 630, 310));

        PHTTTP.setBackground(new java.awt.Color(0, 204, 204));
        PHTTTP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable19.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad", "Angulo", "Tiempo total"
            }
        ));
        jScrollPane21.setViewportView(jTable19);
        if (jTable19.getColumnModel().getColumnCount() > 0) {
            jTable19.getColumnModel().getColumn(0).setResizable(false);
        }

        PHTTTP.add(jScrollPane21, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 6, 584, 285));

        PHTP.add(PHTTTP, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 630, 310));

        PHVIEX.setBackground(new java.awt.Color(0, 204, 204));
        PHVIEX.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable20.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad", "Angulo", "Velocidad inicial en eje x"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane22.setViewportView(jTable20);

        PHVIEX.add(jScrollPane22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 593, 285));

        PHTP.add(PHVIEX, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 630, 310));

        PHVIEY.setBackground(new java.awt.Color(0, 204, 204));
        PHVIEY.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable21.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad", "Angulo", "Velocidad inicial en eje Y"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane23.setViewportView(jTable21);

        PHVIEY.add(jScrollPane23, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 597, 285));

        PHTP.add(PHVIEY, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 630, 310));

        PHVFEX.setBackground(new java.awt.Color(0, 204, 204));
        PHVFEX.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable22.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad", "Angulo", "Velocidad final eje X"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane24.setViewportView(jTable22);

        PHVFEX.add(jScrollPane24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 590, 280));

        PHTP.add(PHVFEX, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 630, 310));

        PHVFTP.setBackground(new java.awt.Color(0, 204, 204));
        PHVFTP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable23.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad", "Angulo", "Velocidad final eje y"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane25.setViewportView(jTable23);

        PHVFTP.add(jScrollPane25, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 606, 285));

        PHTP.add(PHVFTP, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 630, 310));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Tiro Parabolico");
        PHTP.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, -1, -1));

        getContentPane().add(PHTP, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 760, 450));

        PHCL.setBackground(new java.awt.Color(51, 102, 255));
        PHCL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setText("Calculado");
        PHCL.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 47, -1, -1));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiempo", "Velocidad Inicial", "Velocidad Final", "Altura" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        PHCL.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 160, -1));

        PHTiempoCL.setBackground(new java.awt.Color(0, 204, 204));
        PHTiempoCL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad Final", "Tiempo", "Velocidad Inicial"
            }
        ));
        jScrollPane11.setViewportView(jTable10);

        PHTiempoCL.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 6, 557, 275));

        PHCL.add(PHTiempoCL, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 620, 300));

        PHVoCL.setBackground(new java.awt.Color(0, 204, 204));
        PHVoCL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane10.setViewportView(jTable9);

        PHVoCL.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 570, 275));

        PHCL.add(PHVoCL, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 620, 300));

        PHVfCL.setBackground(new java.awt.Color(0, 204, 204));
        PHVfCL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane12.setViewportView(jTable11);

        PHVfCL.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 6, 564, 275));

        PHCL.add(PHVfCL, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 620, 300));

        PHAlturaCL.setBackground(new java.awt.Color(0, 204, 204));
        PHAlturaCL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane13.setViewportView(jTable12);

        PHAlturaCL.add(jScrollPane13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 590, 275));

        PHCL.add(PHAlturaCL, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 620, 300));

        jLabel18.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Caida Libre");
        PHCL.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, -1, -1));

        getContentPane().add(PHCL, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 760, 450));

        PHTV.setBackground(new java.awt.Color(51, 102, 255));
        PHTV.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setText("Calculado");
        PHTV.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Velocidad Final", "Altura maxima (h)", "Tiempo de subida", "Velocidad Inicial" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        PHTV.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 170, -1));

        PHVfTV.setBackground(new java.awt.Color(0, 204, 204));
        PHVfTV.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Velocidad Inicial", "Tiempo", "Velocidad Final"
            }
        ));
        jScrollPane14.setViewportView(jTable13);

        PHVfTV.add(jScrollPane14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 560, 290));

        PHTV.add(PHVfTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 580, 310));

        PHTSTV.setBackground(new java.awt.Color(0, 204, 204));
        PHTSTV.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable14.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Velocidad Inicial", "Tiempo de subida"
            }
        ));
        jScrollPane16.setViewportView(jTable14);

        PHTSTV.add(jScrollPane16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 560, 285));

        PHTV.add(PHTSTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 580, 310));

        PHAMTV.setBackground(new java.awt.Color(0, 204, 204));
        PHAMTV.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jcbAMTV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane15.setViewportView(jcbAMTV);

        PHAMTV.add(jScrollPane15, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 11, 550, 280));

        PHTV.add(PHAMTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 580, 310));

        PHVoTV.setBackground(new java.awt.Color(0, 204, 204));
        PHVoTV.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable15.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Altura", "Velocidad FInal", "Velocidad Inicial"
            }
        ));
        jScrollPane17.setViewportView(jTable15);

        PHVoTV.add(jScrollPane17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 560, 285));

        PHTV.add(PHVoTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 580, 310));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Tiro vertical");
        PHTV.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, -1, -1));

        getContentPane().add(PHTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 760, 450));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Usuario:");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 20, 80, 50));

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 36, 90, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoD.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        int s = jComboBox3.getSelectedIndex();
        if (s == 0) {
            PHDRTP.setVisible(true);
            PHAMTP.setVisible(false);
            PHTS.setVisible(false);
            PHTTTP.setVisible(false);
            PHVIEX.setVisible(false);
            PHVIEY.setVisible(false);
            PHVFEX.setVisible(false);
            PHVFTP.setVisible(false);

            if (ma.deserializarTP(jLabel14.getText(), "TP", "DistanciaRecorrida") != null) {
                tpt = ma.deserializarTP(jLabel14.getText(), "TP", "DistanciaRecorrida");
                String matris[][] = new String[tpt.size()][3];
                for (int i = 0; i < tpt.size(); i++) {
                    matris[i][0] = String.valueOf(tpt.get(i).getVelo());
                    matris[i][1] = String.valueOf(tpt.get(i).getAngulo());
                    matris[i][2] = String.valueOf(tpt.get(i).getRespuesta());
                }
                jTable16.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad", "Angulo", "Distancia recorrida"
                        }
                ));
            }

        } else if (s == 1) {
            PHDRTP.setVisible(false);
            PHAMTP.setVisible(true);
            PHTS.setVisible(false);
            PHTTTP.setVisible(false);
            PHVIEX.setVisible(false);
            PHVIEY.setVisible(false);
            PHVFEX.setVisible(false);
            PHVFTP.setVisible(false);

            if (ma.deserializarTP(jLabel14.getText(), "TP", "AlturaMaxima") != null) {
                tpt = ma.deserializarTP(jLabel14.getText(), "TP", "AlturaMaxima");
                String matris[][] = new String[tpt.size()][3];
                for (int i = 0; i < tpt.size(); i++) {
                    matris[i][0] = String.valueOf(tpt.get(i).getVelo());
                    matris[i][1] = String.valueOf(tpt.get(i).getAngulo());
                    matris[i][2] = String.valueOf(tpt.get(i).getRespuesta());
                }
                jTable17.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad", "Angulo", "Altura Maxima"
                        }
                ));
            }
        } else if (s == 2) {
            PHDRTP.setVisible(false);
            PHAMTP.setVisible(false);
            PHTS.setVisible(true);
            PHTTTP.setVisible(false);
            PHVIEX.setVisible(false);
            PHVIEY.setVisible(false);
            PHVFEX.setVisible(false);
            PHVFTP.setVisible(false);

            if (ma.deserializarTP(jLabel14.getText(), "TP", "TiempoSubida") != null) {
                tpt = ma.deserializarTP(jLabel14.getText(), "TP", "TiempoSubida");
                String matris[][] = new String[tpt.size()][3];
                for (int i = 0; i < tpt.size(); i++) {
                    matris[i][0] = String.valueOf(tpt.get(i).getVelo());
                    matris[i][1] = String.valueOf(tpt.get(i).getAngulo());
                    matris[i][2] = String.valueOf(tpt.get(i).getRespuesta());
                }
                jTable18.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad", "Angulo", "Tiempo de subida"
                        }
                ));
            }

        } else if (s == 3) {
            PHDRTP.setVisible(false);
            PHAMTP.setVisible(false);
            PHTS.setVisible(false);
            PHTTTP.setVisible(true);
            PHVIEX.setVisible(false);
            PHVIEY.setVisible(false);
            PHVFEX.setVisible(false);
            PHVFTP.setVisible(false);

            if (ma.deserializarTP(jLabel14.getText(), "TP", "TiempoTotal") != null) {
                tpt = ma.deserializarTP(jLabel14.getText(), "TP", "TiempoTotal");
                String matris[][] = new String[tpt.size()][3];
                for (int i = 0; i < tpt.size(); i++) {
                    matris[i][0] = String.valueOf(tpt.get(i).getVelo());
                    matris[i][1] = String.valueOf(tpt.get(i).getAngulo());
                    matris[i][2] = String.valueOf(tpt.get(i).getRespuesta());
                }
                jTable19.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad", "Angulo", "Tiempo total"
                        }
                ));
            }

        } else if (s == 4) {
            PHDRTP.setVisible(false);
            PHAMTP.setVisible(false);
            PHTS.setVisible(false);
            PHTTTP.setVisible(false);
            PHVIEX.setVisible(true);
            PHVIEY.setVisible(false);
            PHVFEX.setVisible(false);
            PHVFTP.setVisible(false);

            if (ma.deserializarTP(jLabel14.getText(), "TP", "VelocidadInicialX") != null) {
                tpt = ma.deserializarTP(jLabel14.getText(), "TP", "VelocidadInicialX");
                String matris[][] = new String[tpt.size()][3];
                for (int i = 0; i < tpt.size(); i++) {
                    matris[i][0] = String.valueOf(tpt.get(i).getVelo());
                    matris[i][1] = String.valueOf(tpt.get(i).getAngulo());
                    matris[i][2] = String.valueOf(tpt.get(i).getRespuesta());
                }
                jTable20.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad", "Angulo", "Velocidad inicial en eje X"
                        }
                ));
            }

        } else if (s == 5) {
            PHDRTP.setVisible(false);
            PHAMTP.setVisible(false);
            PHTS.setVisible(false);
            PHTTTP.setVisible(false);
            PHVIEX.setVisible(false);
            PHVIEY.setVisible(true);
            PHVFEX.setVisible(false);
            PHVFTP.setVisible(false);

            if (ma.deserializarTP(jLabel14.getText(), "TP", "VelocidadInicialY") != null) {
                tpt = ma.deserializarTP(jLabel14.getText(), "TP", "VelocidadInicialY");
                String matris[][] = new String[tpt.size()][3];
                for (int i = 0; i < tpt.size(); i++) {
                    matris[i][0] = String.valueOf(tpt.get(i).getVelo());
                    matris[i][1] = String.valueOf(tpt.get(i).getAngulo());
                    matris[i][2] = String.valueOf(tpt.get(i).getRespuesta());
                }
                jTable21.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad", "Angulo", "Velocidad inicial en eje Y"
                        }
                ));
            }

        } else if (s == 6) {
            PHDRTP.setVisible(false);
            PHAMTP.setVisible(false);
            PHTS.setVisible(false);
            PHTTTP.setVisible(false);
            PHVIEX.setVisible(false);
            PHVIEY.setVisible(false);
            PHVFEX.setVisible(true);
            PHVFTP.setVisible(false);
            if (ma.deserializarTP(jLabel14.getText(), "TP", "VelocidadFinalX") != null) {
                tpt = ma.deserializarTP(jLabel14.getText(), "TP", "VelocidadFinalX");
                String matris[][] = new String[tpt.size()][3];
                for (int i = 0; i < tpt.size(); i++) {
                    matris[i][0] = String.valueOf(tpt.get(i).getVelo());
                    matris[i][1] = String.valueOf(tpt.get(i).getAngulo());
                    matris[i][2] = String.valueOf(tpt.get(i).getRespuesta());
                }
                jTable22.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad", "Angulo", "Velocidad final en eje X"
                        }
                ));
            }
        } else if (s == 7) {
            PHDRTP.setVisible(false);
            PHAMTP.setVisible(false);
            PHTS.setVisible(false);
            PHTTTP.setVisible(false);
            PHVIEX.setVisible(false);
            PHVIEY.setVisible(false);
            PHVFEX.setVisible(false);
            PHVFTP.setVisible(true);

            if (ma.deserializarTP(jLabel14.getText(), "TP", "VelocidadFinalY") != null) {
                tpt = ma.deserializarTP(jLabel14.getText(), "TP", "VelocidadFinalY");
                String matris[][] = new String[tpt.size()][3];
                for (int i = 0; i < tpt.size(); i++) {
                    matris[i][0] = String.valueOf(tpt.get(i).getVelo());
                    matris[i][1] = String.valueOf(tpt.get(i).getAngulo());
                    matris[i][2] = String.valueOf(tpt.get(i).getRespuesta());
                }
                jTable23.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad", "Angulo", "Velocidad final en eje Y"
                        }
                ));
            }
        }

    }//GEN-LAST:event_jComboBox3ActionPerformed
    public void mandarNombreMP(String nombre) {
        jLabel14.setText(nombre);
    }
    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        PHMRU.setVisible(true);
        PHMUA.setVisible(false);
        PHTV.setVisible(false);
        PHTP.setVisible(false);
        PHCL.setVisible(false);
        jTextArea1.setVisible(false);
        jScrollPane3.setVisible(false);
        PHDistanciaMRU.setVisible(false);
        PHVelocidadMRU.setVisible(false);

        if (ma.deserializarMRU(jLabel14.getText(), "MRU", "Tiempo") != null) {
            mrua = ma.deserializarMRU(jLabel14.getText(), "MRU", "Tiempo");
            String matris[][] = new String[mrua.size()][3];
            for (int i = 0; i < mrua.size(); i++) {
                matris[i][0] = String.valueOf(mrua.get(i).getVelocidad());
                matris[i][1] = String.valueOf(mrua.get(i).getDistancia());
                matris[i][2] = String.valueOf(mrua.get(i).getTiempo());
            }
            jTable3.setModel(new javax.swing.table.DefaultTableModel(
                    matris,
                    new String[]{
                        "Velocidad", "Distancia", "Tiempo"
                    }
            ));
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        PHMRU.setVisible(false);
        PHMUA.setVisible(true);
        PHTV.setVisible(false);
        PHTP.setVisible(false);
        PHCL.setVisible(false);
        jTextArea1.setVisible(false);
        jScrollPane3.setVisible(false);
        PHDistanciaMUA.setVisible(false);
        PHVoMUA.setVisible(false);
        PHVfMUA.setVisible(false);
        PHTiempoMUA.setVisible(false);

        if (ma.deserializarMUA(jLabel14.getText(), "MUA", "Aceleracion") != null) {
            muad = ma.deserializarMUA(jLabel14.getText(), "MUA", "Aceleracion");
            String matris[][] = new String[muad.size()][4];
            for (int i = 0; i < muad.size(); i++) {
                matris[i][0] = String.valueOf(muad.get(i).getVf());
                matris[i][1] = String.valueOf(muad.get(i).getVi());
                matris[i][2] = String.valueOf(muad.get(i).getTiempo());
                matris[i][3] = String.valueOf(muad.get(i).getAceleracion());

            }
            jTable8.setModel(new javax.swing.table.DefaultTableModel(
                    matris,
                    new String[]{
                        "Velocidad Final", "Velocidad Inicial", "Tiempo", "Aceleracion"
                    }
            ));
        }

    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        PHMRU.setVisible(false);
        PHMUA.setVisible(false);
        PHTV.setVisible(true);
        PHTP.setVisible(false);
        PHCL.setVisible(false);
        jTextArea1.setVisible(false);
        jScrollPane3.setVisible(false);
        PHVfTV.setVisible(true);
        PHTSTV.setVisible(false);
        PHAMTV.setVisible(false);
        PHVoTV.setVisible(false);

        if (ma.deserializarTV(jLabel14.getText(), "TV", "VelocidadFinal") != null) {
            tvrd = ma.deserializarTV(jLabel14.getText(), "TV", "VelocidadFinal");
            String matris[][] = new String[tvrd.size()][3];
            for (int i = 0; i < tvrd.size(); i++) {
                matris[i][0] = String.valueOf(tvrd.get(i).getVo());
                matris[i][1] = String.valueOf(tvrd.get(i).getTiempo());
                matris[i][2] = String.valueOf(tvrd.get(i).getVf());

            }
            jTable13.setModel(new javax.swing.table.DefaultTableModel(
                    matris,
                    new String[]{
                        "Velocidad Inicial", "Tiempo", "Velocidad Final",}
            ));
        }

    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        PHMRU.setVisible(false);
        PHMUA.setVisible(false);
        PHTV.setVisible(false);
        PHTP.setVisible(true);
        PHCL.setVisible(false);
        jTextArea1.setVisible(false);
        jScrollPane3.setVisible(false);

        PHDRTP.setVisible(true);
        PHAMTP.setVisible(false);
        PHTS.setVisible(false);
        PHTTTP.setVisible(false);
        PHVIEX.setVisible(false);
        PHVIEY.setVisible(false);
        PHVFEX.setVisible(false);
        PHVFTP.setVisible(false);

        if (ma.deserializarTP(jLabel14.getText(), "TP", "DistanciaRecorrida") != null) {
            tpt = ma.deserializarTP(jLabel14.getText(), "TP", "DistanciaRecorrida");
            String matris[][] = new String[tpt.size()][3];
            for (int i = 0; i < tpt.size(); i++) {
                matris[i][0] = String.valueOf(tpt.get(i).getVelo());
                matris[i][1] = String.valueOf(tpt.get(i).getAngulo());
                matris[i][2] = String.valueOf(tpt.get(i).getRespuesta());
            }
            jTable16.setModel(new javax.swing.table.DefaultTableModel(
                    matris,
                    new String[]{
                        "Velocidad", "Angulo", "Distancia recorrida"
                    }
            ));
        }

    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        PHMRU.setVisible(false);
        PHMUA.setVisible(false);
        PHTV.setVisible(false);
        PHTP.setVisible(false);
        PHCL.setVisible(true);
        jTextArea1.setVisible(false);
        jScrollPane3.setVisible(false);

        if (ma.deserializarCL(jLabel14.getText(), "CL", "Tiempo") != null) {
            cld = ma.deserializarCL(jLabel14.getText(), "CL", "Tiempo");
            String matris[][] = new String[cld.size()][3];
            for (int i = 0; i < cld.size(); i++) {
                matris[i][0] = String.valueOf(cld.get(i).getVf());
                matris[i][1] = String.valueOf(cld.get(i).getVi());
                matris[i][2] = String.valueOf(cld.get(i).getTiempo());
            }
            jTable10.setModel(new javax.swing.table.DefaultTableModel(
                    matris,
                    new String[]{
                        "Velocidad Final", "Velocidad Inicial", "Tiempo",}
            ));
        }

    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked

        MenuPrincipal mu = new MenuPrincipal();
        mu.mandarNombreMP(jLabel14.getText());
        mu.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jcbhMRUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbhMRUActionPerformed
        int i = jcbhMRU.getSelectedIndex();
        if (i == 0) {
            PHTiempoMRU.setVisible(true);
            PHDistanciaMRU.setVisible(false);
            PHVelocidadMRU.setVisible(false);

            if (ma.deserializarMRU(jLabel14.getText(), "MRU", "Tiempo") != null) {
                mrua = ma.deserializarMRU(jLabel14.getText(), "MRU", "Tiempo");
                String matris[][] = new String[mrua.size()][3];
                for (i = 0; i < mrua.size(); i++) {
                    matris[i][0] = String.valueOf(mrua.get(i).getVelocidad());
                    matris[i][1] = String.valueOf(mrua.get(i).getDistancia());
                    matris[i][2] = String.valueOf(mrua.get(i).getTiempo());
                }
                jTable3.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad", "Distancia", "Tiempo"
                        }
                ));

            }
        } else if (i == 1) {
            PHTiempoMRU.setVisible(false);
            PHDistanciaMRU.setVisible(true);
            PHVelocidadMRU.setVisible(false);

            if (ma.deserializarMRU(jLabel14.getText(), "MRU", "Distancia") != null) {
                mrua = ma.deserializarMRU(jLabel14.getText(), "MRU", "Distancia");
                String matris[][] = new String[mrua.size()][3];
                for (i = 0; i < mrua.size(); i++) {
                    matris[i][0] = String.valueOf(mrua.get(i).getVelocidad());
                    matris[i][1] = String.valueOf(mrua.get(i).getTiempo());
                    matris[i][2] = String.valueOf(mrua.get(i).getDistancia());
                }
                jTable2.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad", "Tiempo", "Distancia"
                        }
                ));
            }
        } else if (i == 2) {
            PHTiempoMRU.setVisible(false);
            PHDistanciaMRU.setVisible(false);
            PHVelocidadMRU.setVisible(true);

            if (ma.deserializarMRU(jLabel14.getText(), "MRU", "Velocidad") != null) {
                mrua = ma.deserializarMRU(jLabel14.getText(), "MRU", "Velocidad");
                String matris[][] = new String[mrua.size()][3];
                for (i = 0; i < mrua.size(); i++) {
                    matris[i][0] = String.valueOf(mrua.get(i).getDistancia());
                    matris[i][1] = String.valueOf(mrua.get(i).getTiempo());
                    matris[i][2] = String.valueOf(mrua.get(i).getVelocidad());
                }
                jTable1.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Distancia", "Tiempo", "Velocidad"
                        }
                ));
            }

        }
    }//GEN-LAST:event_jcbhMRUActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        int i = jComboBox2.getSelectedIndex();
        if (i == 0) {
            PHAceleracionMUA.setVisible(true);
            PHDistanciaMUA.setVisible(false);
            PHVoMUA.setVisible(false);
            PHVfMUA.setVisible(false);
            PHTiempoMUA.setVisible(false);

            if (ma.deserializarMUA(jLabel14.getText(), "MUA", "Aceleracion") != null) {
                muad = ma.deserializarMUA(jLabel14.getText(), "MUA", "Aceleracion");
                String matris[][] = new String[muad.size()][4];
                for (i = 0; i < muad.size(); i++) {
                    matris[i][0] = String.valueOf(muad.get(i).getVf());
                    matris[i][1] = String.valueOf(muad.get(i).getVi());
                    matris[i][2] = String.valueOf(muad.get(i).getTiempo());
                    matris[i][3] = String.valueOf(muad.get(i).getAceleracion());

                }
                jTable8.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Final", "Velocidad Inicial", "Tiempo", "Aceleracion"
                        }
                ));
            }

        } else if (i == 1) {
            PHAceleracionMUA.setVisible(false);
            PHDistanciaMUA.setVisible(true);
            PHVoMUA.setVisible(false);
            PHVfMUA.setVisible(false);
            PHTiempoMUA.setVisible(false);

            if (ma.deserializarMUA(jLabel14.getText(), "MUA", "Distancia") != null) {
                muad = ma.deserializarMUA(jLabel14.getText(), "MUA", "Distancia");
                String matris[][] = new String[muad.size()][4];
                for (i = 0; i < muad.size(); i++) {
                    matris[i][0] = String.valueOf(muad.get(i).getVi());
                    matris[i][1] = String.valueOf(muad.get(i).getTiempo());
                    matris[i][2] = String.valueOf(muad.get(i).getAceleracion());
                    matris[i][3] = String.valueOf(muad.get(i).getDistancia());

                }
                jTable4.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Inicial", "Tiempo", "Aceleracion", "Distancia"
                        }
                ));
            }

        } else if (i == 2) {
            PHAceleracionMUA.setVisible(false);
            PHDistanciaMUA.setVisible(false);
            PHVoMUA.setVisible(false);
            PHVfMUA.setVisible(false);
            PHTiempoMUA.setVisible(true);

            if (ma.deserializarMUA(jLabel14.getText(), "MUA", "Tiempo") != null) {
                muad = ma.deserializarMUA(jLabel14.getText(), "MUA", "Tiempo");
                String matris[][] = new String[muad.size()][4];
                for (i = 0; i < muad.size(); i++) {
                    matris[i][0] = String.valueOf(muad.get(i).getVf());
                    matris[i][1] = String.valueOf(muad.get(i).getVi());
                    matris[i][2] = String.valueOf(muad.get(i).getAceleracion());
                    matris[i][3] = String.valueOf(muad.get(i).getTiempo());

                }
                jTable7.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Final", "Velocidad Inicial", "Aceleracion", "Tiempo"
                        }
                ));
            }

        } else if (i == 3) {
            PHAceleracionMUA.setVisible(false);
            PHDistanciaMUA.setVisible(false);
            PHVoMUA.setVisible(true);
            PHVfMUA.setVisible(false);
            PHTiempoMUA.setVisible(false);

            if (ma.deserializarMUA(jLabel14.getText(), "MUA", "VelocidadInicial") != null) {
                muad = ma.deserializarMUA(jLabel14.getText(), "MUA", "VelocidadInicial");
                String matris[][] = new String[muad.size()][4];
                for (i = 0; i < muad.size(); i++) {
                    matris[i][0] = String.valueOf(muad.get(i).getVf());
                    matris[i][1] = String.valueOf(muad.get(i).getAceleracion());
                    matris[i][2] = String.valueOf(muad.get(i).getTiempo());
                    matris[i][3] = String.valueOf(muad.get(i).getVi());

                }
                jTable5.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Final", "Aceleracion", "Tiempo", "Velocidad Inicial"
                        }
                ));
            }

        } else if (i == 4) {
            PHAceleracionMUA.setVisible(false);
            PHDistanciaMUA.setVisible(false);
            PHVoMUA.setVisible(false);
            PHVfMUA.setVisible(true);
            PHTiempoMUA.setVisible(false);

            if (ma.deserializarMUA(jLabel14.getText(), "MUA", "VelocidadFinal") != null) {
                muad = ma.deserializarMUA(jLabel14.getText(), "MUA", "VelocidadFinal");
                String matris[][] = new String[muad.size()][4];
                for (i = 0; i < muad.size(); i++) {
                    matris[i][0] = String.valueOf(muad.get(i).getVi());
                    matris[i][1] = String.valueOf(muad.get(i).getAceleracion());
                    matris[i][2] = String.valueOf(muad.get(i).getTiempo());
                    matris[i][3] = String.valueOf(muad.get(i).getVf());

                }
                jTable6.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Inicial", "Aceleracion", "Tiempo", "Velocidad Final"
                        }
                ));
            }

        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        int s = jComboBox4.getSelectedIndex();
        if (s == 0) {
            PHTiempoCL.setVisible(true);
            PHVoCL.setVisible(false);
            PHVfCL.setVisible(false);
            PHAlturaCL.setVisible(false);
            if (ma.deserializarCL(jLabel14.getText(), "CL", "Tiempo") != null) {
                cld = ma.deserializarCL(jLabel14.getText(), "CL", "Tiempo");
                String matris[][] = new String[cld.size()][3];
                for (int i = 0; i < cld.size(); i++) {
                    matris[i][0] = String.valueOf(cld.get(i).getVf());
                    matris[i][1] = String.valueOf(cld.get(i).getVi());
                    matris[i][2] = String.valueOf(cld.get(i).getTiempo());
                }
                jTable10.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Final", "Velocidad Inicial", "Tiempo",}
                ));
            }

        } else if (s == 1) {
            PHTiempoCL.setVisible(false);
            PHVoCL.setVisible(true);
            PHVfCL.setVisible(false);
            PHAlturaCL.setVisible(false);

            if (ma.deserializarCL(jLabel14.getText(), "CL", "VelocidadInicial") != null) {
                cld = ma.deserializarCL(jLabel14.getText(), "CL", "VelocidadInicial");
                String matris[][] = new String[cld.size()][3];
                for (int i = 0; i < cld.size(); i++) {
                    matris[i][0] = String.valueOf(cld.get(i).getVf());
                    matris[i][1] = String.valueOf(cld.get(i).getTiempo());
                    matris[i][2] = String.valueOf(cld.get(i).getVi());
                }
                jTable9.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Final", "Tiempo", "Velocidad Inicial"}
                ));
            }
        } else if (s == 2) {
            PHTiempoCL.setVisible(false);
            PHVoCL.setVisible(false);
            PHVfCL.setVisible(true);
            PHAlturaCL.setVisible(false);

            if (ma.deserializarCL(jLabel14.getText(), "CL", "VelocidadFinal") != null) {
                cld = ma.deserializarCL(jLabel14.getText(), "CL", "VelocidadFinal");
                String matris[][] = new String[cld.size()][3];
                for (int i = 0; i < cld.size(); i++) {
                    matris[i][0] = String.valueOf(cld.get(i).getVi());
                    matris[i][1] = String.valueOf(cld.get(i).getTiempo());
                    matris[i][2] = String.valueOf(cld.get(i).getVf());
                }
                jTable11.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Inicial", "Tiempo", "Velocidad Final"}
                ));
            }

        } else if (s == 3) {
            PHTiempoCL.setVisible(false);
            PHVoCL.setVisible(false);
            PHVfCL.setVisible(false);
            PHAlturaCL.setVisible(true);

            if (ma.deserializarCL(jLabel14.getText(), "CL", "Altura") != null) {
                cld = ma.deserializarCL(jLabel14.getText(), "CL", "Altura");
                String matris[][] = new String[cld.size()][3];
                for (int i = 0; i < cld.size(); i++) {
                    matris[i][0] = String.valueOf(cld.get(i).getVi());
                    matris[i][1] = String.valueOf(cld.get(i).getTiempo());
                    matris[i][2] = String.valueOf(cld.get(i).getAltura());
                }
                jTable12.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Inicial", "Tiempo", "Altura"}
                ));
            }

        }

    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        int s = jComboBox5.getSelectedIndex();
        if (s == 0) {
            PHVfTV.setVisible(true);
            PHTSTV.setVisible(false);
            PHAMTV.setVisible(false);
            PHVoTV.setVisible(false);

            if (ma.deserializarTV(jLabel14.getText(), "TV", "VelocidadFinal") != null) {
                tvrd = ma.deserializarTV(jLabel14.getText(), "TV", "VelocidadFinal");
                String matris[][] = new String[tvrd.size()][3];
                for (int i = 0; i < tvrd.size(); i++) {
                    matris[i][0] = String.valueOf(tvrd.get(i).getVo());
                    matris[i][1] = String.valueOf(tvrd.get(i).getTiempo());
                    matris[i][2] = String.valueOf(tvrd.get(i).getVf());

                }
                jTable13.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Inicial", "Tiempo", "Velocidad Final",}
                ));
            }

        } else if (s == 1) {
            PHVfTV.setVisible(false);
            PHTSTV.setVisible(false);
            PHAMTV.setVisible(true);
            PHVoTV.setVisible(false);

            if (ma.deserializarTV(jLabel14.getText(), "TV", "AlturaMaxima") != null) {
                tvrd = ma.deserializarTV(jLabel14.getText(), "TV", "AlturaMaxima");
                String matris[][] = new String[tvrd.size()][3];
                for (int i = 0; i < tvrd.size(); i++) {
                    matris[i][0] = String.valueOf(tvrd.get(i).getVo());
                    matris[i][1] = String.valueOf(tvrd.get(i).getVf());
                    matris[i][2] = String.valueOf(tvrd.get(i).getHm());

                }
                jcbAMTV.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Inicial", "Velocidad Final", "Altura Maxima",}
                ));
            }
        } else if (s == 2) {
            PHVfTV.setVisible(false);
            PHTSTV.setVisible(true);
            PHAMTV.setVisible(false);
            PHVoTV.setVisible(false);

            if (ma.deserializarTV(jLabel14.getText(), "TV", "TiempoSubida") != null) {
                tvrd = ma.deserializarTV(jLabel14.getText(), "TV", "TiempoSubida");
                String matris[][] = new String[tvrd.size()][2];
                for (int i = 0; i < tvrd.size(); i++) {
                    matris[i][0] = String.valueOf(tvrd.get(i).getVo());
                    matris[i][1] = String.valueOf(tvrd.get(i).getTiempo());

                }
                jTable14.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Velocidad Inicial", "Tiempo de subida",}
                ));
            }

        } else if (s == 3) {
            PHVfTV.setVisible(false);
            PHTSTV.setVisible(false);
            PHAMTV.setVisible(false);
            PHVoTV.setVisible(true);

            if (ma.deserializarTV(jLabel14.getText(), "TV", "VelocidadInicial") != null) {
                tvrd = ma.deserializarTV(jLabel14.getText(), "TV", "VelocidadInicial");
                String matris[][] = new String[tvrd.size()][3];
                for (int i = 0; i < tvrd.size(); i++) {
                    matris[i][0] = String.valueOf(tvrd.get(i).getHm());
                    matris[i][1] = String.valueOf(tvrd.get(i).getVf());
                    matris[i][2] = String.valueOf(tvrd.get(i).getVo());

                }
                jTable15.setModel(new javax.swing.table.DefaultTableModel(
                        matris,
                        new String[]{
                            "Altura", "Velocidad Final", "Velocidad Inicial"}
                ));
            }

        }

    }//GEN-LAST:event_jComboBox5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Historial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PHAMTP;
    private javax.swing.JPanel PHAMTV;
    private javax.swing.JPanel PHAceleracionMUA;
    private javax.swing.JPanel PHAlturaCL;
    private javax.swing.JPanel PHCL;
    private javax.swing.JPanel PHDRTP;
    private javax.swing.JPanel PHDistanciaMRU;
    private javax.swing.JPanel PHDistanciaMUA;
    private javax.swing.JPanel PHMRU;
    private javax.swing.JPanel PHMUA;
    private javax.swing.JPanel PHTP;
    private javax.swing.JPanel PHTS;
    private javax.swing.JPanel PHTSTV;
    private javax.swing.JPanel PHTTTP;
    private javax.swing.JPanel PHTV;
    private javax.swing.JPanel PHTiempoCL;
    private javax.swing.JPanel PHTiempoMRU;
    private javax.swing.JPanel PHTiempoMUA;
    private javax.swing.JPanel PHVFEX;
    private javax.swing.JPanel PHVFTP;
    private javax.swing.JPanel PHVIEX;
    private javax.swing.JPanel PHVIEY;
    private javax.swing.JPanel PHVelocidadMRU;
    private javax.swing.JPanel PHVfCL;
    private javax.swing.JPanel PHVfMUA;
    private javax.swing.JPanel PHVfTV;
    private javax.swing.JPanel PHVoCL;
    private javax.swing.JPanel PHVoMUA;
    private javax.swing.JPanel PHVoTV;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable10;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable14;
    private javax.swing.JTable jTable15;
    private javax.swing.JTable jTable16;
    private javax.swing.JTable jTable17;
    private javax.swing.JTable jTable18;
    private javax.swing.JTable jTable19;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable20;
    private javax.swing.JTable jTable21;
    private javax.swing.JTable jTable22;
    private javax.swing.JTable jTable23;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable jcbAMTV;
    private javax.swing.JComboBox<String> jcbhMRU;
    // End of variables declaration//GEN-END:variables
}
